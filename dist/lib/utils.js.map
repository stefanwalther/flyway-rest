{"version":3,"sources":["lib/utils.js"],"names":["toRes","res","status","err","thing","send","toObject","json"],"mappings":";;;;;QASgBA,K,GAAAA,K;AAThB;;;;;;;;;AASO,SAASA,KAAT,CAAgBC,GAAhB,EAAoC;AAAA,MAAfC,MAAe,uEAAN,GAAM;;AACzC,SAAO,UAAEC,GAAF,EAAOC,KAAP,EAAkB;AACvB,QAAKD,GAAL,EAAW;AACT,aAAOF,IAAIC,MAAJ,CAAY,GAAZ,EAAkBG,IAAlB,CAAwBF,GAAxB,CAAP;AACD;;AAED,QAAKC,SAAS,OAAOA,MAAME,QAAb,KAA0B,UAAxC,EAAqD;AACnDF,cAAQA,MAAME,QAAN,EAAR;AACD;AACDL,QAAIC,MAAJ,CAAYA,MAAZ,EAAqBK,IAArB,CAA2BH,KAA3B;AACD,GATD;AAUD","file":"utils.js","sourcesContent":["/**  Creates a callback that proxies node callback style arguments to an Express Response object.\n *  @param {express.Response} res  Express HTTP Response\n *  @param {number} [status=200]  Status code to send on success\n *\n *  @example\n *    list(req, res) {\n *\t\t\tcollection.find({}, toRes(res));\n *\t\t}\n */\nexport function toRes( res, status = 200 ) {\n  return ( err, thing ) => {\n    if ( err ) {\n      return res.status( 500 ).send( err );\n    }\n\n    if ( thing && typeof thing.toObject === 'function' ) {\n      thing = thing.toObject();\n    }\n    res.status( status ).json( thing );\n  };\n}\n"],"sourceRoot":"/Users/swr/git/stefanwalther/flyway-rest/src"}